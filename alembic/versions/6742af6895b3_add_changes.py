"""Add changes

Revision ID: 6742af6895b3
Revises: 12a373d592f9
Create Date: 2022-09-12 11:49:59.928597

"""

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = '6742af6895b3'
down_revision = '12a373d592f9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('branch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('deletedStatus', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_branch_name'), 'branch', ['name'], unique=False)
    op.create_table('institution',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('commissionType', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('commission', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('active_status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('active_status_reason', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('rate_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('deletedStatus', sa.Boolean(), nullable=True),
    sa.Column('invoicing_period_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supportingdocument',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('expirationDate', sa.DateTime(), nullable=False),
    sa.Column('path', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('deletedStatus', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_supportingdocument_name'), 'supportingdocument', ['name'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('firstName', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('lastName', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('userName', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('deletedStatus', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('is_staff', sa.Boolean(), nullable=True),
    sa.Column('is_default_password', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('referenceId', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('referenceName', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('role', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=False)
    op.create_index(op.f('ix_user_firstName'), 'user', ['firstName'], unique=False)
    op.create_index(op.f('ix_user_lastName'), 'user', ['lastName'], unique=False)
    op.create_index(op.f('ix_user_password'), 'user', ['password'], unique=False)
    op.create_index(op.f('ix_user_userName'), 'user', ['userName'], unique=False)
    op.create_table('contract',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('current', sa.Boolean(), nullable=False),
    sa.Column('attachment', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('rate', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('expirationDate', sa.DateTime(), nullable=False),
    sa.Column('deletedStatus', sa.Boolean(), nullable=True),
    sa.Column('due_date_days', sa.Integer(), nullable=False),
    sa.Column('institution_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['institution_id'], ['institution.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employee',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('firstName', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('lastName', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('gender', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('photo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('active_status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('individualRate', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('deletedStatus', sa.Boolean(), nullable=True),
    sa.Column('institution_id', sa.Integer(), nullable=True),
    sa.Column('referenceName', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['institution_id'], ['institution.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('entryperiod',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('startDate', sa.DateTime(), nullable=False),
    sa.Column('endDate', sa.DateTime(), nullable=False),
    sa.Column('deletedStatus', sa.Boolean(), nullable=True),
    sa.Column('institution_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['institution_id'], ['institution.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employeeentry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('signature', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('signed', sa.Boolean(), nullable=False),
    sa.Column('signedAt', sa.DateTime(), nullable=True),
    sa.Column('deletedStatus', sa.Boolean(), nullable=True),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('entry_period_id', sa.Integer(), nullable=True),
    sa.Column('doneAt', sa.DateTime(), nullable=True),
    sa.Column('branchName', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('branchId', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('has_expired', sa.Boolean(), nullable=True),
    sa.Column('image', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employee.id'], ),
    sa.ForeignKeyConstraint(['entry_period_id'], ['entryperiod.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invoice',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('payment_status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('payment_confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('payment_confirmed_by', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('deletedStatus', sa.Boolean(), nullable=True),
    sa.Column('total_amount', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('invoice_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('invoice_notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('invoice_ebm', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('entry_period_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['entry_period_id'], ['entryperiod.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('invoice')
    op.drop_table('employeeentry')
    op.drop_table('entryperiod')
    op.drop_table('employee')
    op.drop_table('contract')
    op.drop_index(op.f('ix_user_userName'), table_name='user')
    op.drop_index(op.f('ix_user_password'), table_name='user')
    op.drop_index(op.f('ix_user_lastName'), table_name='user')
    op.drop_index(op.f('ix_user_firstName'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_supportingdocument_name'), table_name='supportingdocument')
    op.drop_table('supportingdocument')
    op.drop_table('institution')
    op.drop_index(op.f('ix_branch_name'), table_name='branch')
    op.drop_table('branch')
    # ### end Alembic commands ###
